{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { apis } from \"../apis\";\nconst loginSlice = createSlice({\n  name: \"login\",\n  initialState: {\n    loading: false,\n    successMessage: \"\",\n    error: \"\",\n    user: {}\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(apis.login.pending, state => {\n      state.loading = true;\n    });\n    builder.addCase(apis.login.fulfilled, (state, action) => {\n      localStorage.setItem(\"user\", action === null || action === void 0 ? void 0 : action.payload);\n      state.loading = false;\n      state.user = action === null || action === void 0 ? void 0 : action.payload;\n      state.successMessage = \"Logged in successfully\";\n    });\n    builder.addCase(apis.login.rejected, (state, action) => {\n      var _action$payload;\n      state.loading = false;\n      state.error = action === null || action === void 0 ? void 0 : (_action$payload = action.payload) === null || _action$payload === void 0 ? void 0 : _action$payload.error;\n    });\n    builder.addCase(apis.resetAll, state => {\n      state.loading = false;\n      state.error = \"\";\n      state.user = {};\n      state.successMessage = \"\";\n    });\n  }\n});\nexport default loginSlice.reducer;","map":{"version":3,"names":["createSlice","apis","loginSlice","name","initialState","loading","successMessage","error","user","reducers","extraReducers","builder","addCase","login","pending","state","fulfilled","action","localStorage","setItem","payload","rejected","_action$payload","resetAll","reducer"],"sources":["C:/Users/User/Desktop/WEBproject/SkillStream-Frontend-main/SkillStream-Frontend-main/skillStream-frontend/src/store/reducers/login.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { apis } from \"../apis\";\r\n\r\nconst loginSlice = createSlice({\r\n  name: \"login\",\r\n  initialState: {\r\n    loading: false,\r\n    successMessage: \"\",\r\n    error: \"\",\r\n    user: {},\r\n  },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder.addCase(apis.login.pending, (state) => {\r\n      state.loading = true;\r\n    });\r\n    builder.addCase(apis.login.fulfilled, (state, action) => {\r\n      localStorage.setItem(\"user\", action?.payload);\r\n      state.loading = false;\r\n      state.user = action?.payload;\r\n      state.successMessage = \"Logged in successfully\";\r\n    });\r\n    builder.addCase(apis.login.rejected, (state, action) => {\r\n      state.loading = false;\r\n      state.error = action?.payload?.error;\r\n    });\r\n    builder.addCase(apis.resetAll, (state) => {\r\n      state.loading = false;\r\n      state.error = \"\";\r\n      state.user = {};\r\n      state.successMessage = \"\";\r\n    });\r\n  },\r\n});\r\n\r\nexport default loginSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,IAAI,QAAQ,SAAS;AAE9B,MAAMC,UAAU,GAAGF,WAAW,CAAC;EAC7BG,IAAI,EAAE,OAAO;EACbC,YAAY,EAAE;IACZC,OAAO,EAAE,KAAK;IACdC,cAAc,EAAE,EAAE;IAClBC,KAAK,EAAE,EAAE;IACTC,IAAI,EAAE,CAAC;EACT,CAAC;EACDC,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CAACC,OAAO,CAACX,IAAI,CAACY,KAAK,CAACC,OAAO,EAAGC,KAAK,IAAK;MAC7CA,KAAK,CAACV,OAAO,GAAG,IAAI;IACtB,CAAC,CAAC;IACFM,OAAO,CAACC,OAAO,CAACX,IAAI,CAACY,KAAK,CAACG,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MACvDC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEF,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEG,OAAO,CAAC;MAC7CL,KAAK,CAACV,OAAO,GAAG,KAAK;MACrBU,KAAK,CAACP,IAAI,GAAGS,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEG,OAAO;MAC5BL,KAAK,CAACT,cAAc,GAAG,wBAAwB;IACjD,CAAC,CAAC;IACFK,OAAO,CAACC,OAAO,CAACX,IAAI,CAACY,KAAK,CAACQ,QAAQ,EAAE,CAACN,KAAK,EAAEE,MAAM,KAAK;MAAA,IAAAK,eAAA;MACtDP,KAAK,CAACV,OAAO,GAAG,KAAK;MACrBU,KAAK,CAACR,KAAK,GAAGU,MAAM,aAANA,MAAM,wBAAAK,eAAA,GAANL,MAAM,CAAEG,OAAO,cAAAE,eAAA,uBAAfA,eAAA,CAAiBf,KAAK;IACtC,CAAC,CAAC;IACFI,OAAO,CAACC,OAAO,CAACX,IAAI,CAACsB,QAAQ,EAAGR,KAAK,IAAK;MACxCA,KAAK,CAACV,OAAO,GAAG,KAAK;MACrBU,KAAK,CAACR,KAAK,GAAG,EAAE;MAChBQ,KAAK,CAACP,IAAI,GAAG,CAAC,CAAC;MACfO,KAAK,CAACT,cAAc,GAAG,EAAE;IAC3B,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;AAEF,eAAeJ,UAAU,CAACsB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}